/*
Usage:
Run 'gradle eclipse' to generate eclipse project files and import those into an IDE that supports
them.
 */
buildscript {
	repositories {
  		add(new org.apache.ivy.plugins.resolver.URLResolver()) {
    		name = "GitHub"
    		addArtifactPattern 'http://github.com/hierynomus/appengine-gradle-plugin/downloads/[organization]-[module]-[revision].[ext]'
  		}
	}

	dependencies {
		classpath 'com.xebia:appengine-gradle-plugin:0.2@jar'
		classpath 'appengine:tools-api:1.3.2@jar'
	}
}

defaultTasks 'build'
usePlugin 'eclipse'
usePlugin 'war'
usePlugin com.xebia.gradle.plugins.AppEngine

group = "com.xebia.adoptimizer"
version = "0.1-SNAPSHOT"

repositories {
  mavenRepo urls: "file://" + System.getProperty('user.home') + "/.m2/repository/"
  mavenRepo urls: 'http://s3.amazonaws.com/maven.springframework.org/snapshot'
  mavenRepo urls: 'http://s3.amazonaws.com/maven.springframework.org/milestone'
  mavenCentral()
  add(new org.apache.ivy.plugins.resolver.URLResolver()) {
    name = "GitHub"
    addArtifactPattern 'http://github.com/asikkema/adoptimizer/downloads/[organization]-[module]-[revision].[ext]'
  }
}

sourceCompatibility = 1.6

springVersion = "3.0.2.RELEASE"

dependencies {
	compile 'com.google.gwt:gwt-user:2.0.3'
	compile 'com.google.gwt:gwt-dev:2.0.3'
	compile "org.slf4j:slf4j-api:1.4.2"
	compile "org.slf4j:slf4j-log4j12:1.4.2"

	compile "gdata:client:1.0@jar"
	compile "gdata:analytics:2.1@jar"
	compile "gdata:analytics-meta:2.1@jar"
    compile "gdata:core:1.0@jar"
    compile "gdata:base:1.0@jar"
    compile "gdata:maps:2.0@jar"
    compile "gdata:maps-meta:2.0@jar"
    compile "com.google.collections:google-collections:1.0"
    compile "adwords:api:7.1.1@jar"

	testCompile "junit:junit:4.7"
	testCompile "org.mockito:mockito-all:1.8.0"
	testCompile "org.hamcrest:hamcrest-all:1.1"

  compile "com.google.gwt:gwt-user:1.6.4"
}
